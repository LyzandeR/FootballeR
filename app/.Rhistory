print('yo')
library(shiny)
library(googleVis)
?gvisTable
tbl1 <- gvisTable(Population)
plot(tbl1)
gvisTable(team_stats)
library(data.table)
library(highcharter)
library(DT)
footy_tab <- setDT(read.csv('C:/Users/teoboot/Downloads/E0.csv', stringsAsFactors=FALSE))
footy_tab[, Date := as.IDate(Date, format='%d/%m/%y')]
teams <- unique(c(footy_tab[ , unique(HomeTeam)], footy_tab[ , unique(AwayTeam)]))
home_team_stats <- lapply(teams, function(x) {
footy_tab[HomeTeam==x, list(Team                 = x,
Played1              = .N,
Points1              = sum(ifelse(FTR == 'H', 1L, 0L)) * 3 + sum(ifelse(FTR == 'D', 1L, 0L)),
`Home Wins`          = sum(ifelse(FTR == 'H', 1L, 0L)),
`Home Draws`         = sum(ifelse(FTR == 'D', 1L, 0L)),
`Home Losses`        = sum(ifelse(FTR == 'A', 1L, 0L)),
`Home Scored`  = sum(FTHG),
`Home Conceded`= sum(FTAG)),
by='HomeTeam']
})
away_team_stats <- lapply(teams, function(x) {
footy_tab[AwayTeam==x, list(Team                 = x,
Played2              = .N,
Points2              = sum(ifelse(FTR == 'A', 1L, 0L)) * 3 + sum(ifelse(FTR == 'D', 1L, 0L)),
`Away Wins`          = sum(ifelse(FTR == 'A', 1L, 0L)),
`Away Draws`         = sum(ifelse(FTR == 'D', 1L, 0L)),
`Away Losses`        = sum(ifelse(FTR == 'H', 1L, 0L)),
`Away Scored`  = as.integer(sum(FTAG)),
`Away Conceded`= as.integer(sum(FTHG))),
by='AwayTeam']
})
home_team_stats <- rbindlist(home_team_stats)
away_team_stats <- rbindlist(away_team_stats)
team_stats <- cbind(home_team_stats, away_team_stats)[, list(Team,
Played = Played1 + Played2,
`Home Wins`, `Home Draws`, `Home Losses`, `Home Scored`, `Home Conceded`,
`Away Wins`, `Away Draws`, `Away Losses`, `Away Scored`, `Away Conceded`,
`Goal Diff` = `Home Scored` + `Away Scored` - `Home Conceded` - `Away Conceded`,
Points      = as.integer(Points1 + Points2))][,
total_scored := `Home Scored` + `Away Scored`]
setorder(team_stats, -Points, -`Goal Diff`, -total_scored)
team_stats[, Position := as.character(.I)]
team_stats[, total_scored := NULL]
team_stats <- team_stats[, c('Position', names(team_stats)[-length(names(team_stats))]), with = FALSE]
gvisTable(team_stats)
runApp()
setwd('c:/github/Footballer/app/')
runApp()
xtable(mtcars, type='html')
xtables(mtcars, type='html')
?renderTable
tli.table <- xtable(tli[1:20, ])
library(shiny)
tli.table <- xtable(tli[1:20, ])
?xtable
library(xtable)
tli.table <- xtable(tli[1:20, ])
data(tli)
tli.table <- xtable(tli[1:20, ])
xtable(mtcars, type='html')
data(tli)
tli.table <- xtable(tli[1:20,])
digits(tli.table)[c(2,6)] <- 0
print(tli.table,type="html",
html.table.attributes='border='1' align="center" bgcolor="#FFCC00"' )
data(tli)
tli.table <- xtable(tli[1:20,])
digits(tli.table)[c(2,6)] <- 0
print(tli.table,type="html",
html.table.attributes='border='1' align="center" bgcolor="#FFCC00"' )
print(tli.table,type="html",
html.table.attributes='border="1" align="center" bgcolor="#FFCC00"' )
?xtable
Cohort
library(xtable)
Grade3 <- c("A","B","B","A","B","C","C","D","A","B","C","C","C","D","B","B","D","C","C","D")
Grade6 <- c("A","A","A","B","B","B","B","B","C","C","A","C","C","C","D","D","D","D","D","D")
Cohort <- table(Grade3,Grade6)
print(xtable(Cohort))
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- 0
addtorow$pos[[2]] <- 0
addtorow$command <- c('& & Grade 6 & & \\\\\n', "Grade 3 & A & B & C & D \\\\\n")
print(xtable(Cohort, caption = 'My Title'), caption.placement = 'top',
add.to.row = addtorow, include.colnames = FALSE)
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- 0
addtorow$pos[[2]] <- 0
addtorow$command <- c('& & Grade 6 & & \\\\\n', "Grade 3 & A & B & C & D \\\\\n")
print(xtable(Cohort, caption = 'My Title'), caption.placement = 'top',
add.to.row = addtorow, include.colnames = FALSE, type='html')
set.seed(2345)
res <- matrix(sample(0:9, size = 6*9, replace = TRUE), ncol = 6, nrow = 9)
xres <- xtable(res)
digits(xres) <- rep(0, 7)
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- c(0, 2)
addtorow$pos[[2]] <- 4
addtorow$command <- c('\vspace{2mm} \n', '\vspace{10mm} \n')
print(xres, add.to.row = addtorow, include.rownames = FALSE,
include.colnames = TRUE, only.contents = TRUE,
hline.after = c(0, 0, 9, 9), type='html')
print(xtable(Cohort, caption = 'My Title'), caption.placement = 'top',
add.to.row = addtorow, include.colnames = FALSE, type='html')
addtorow <- '<tr> <th rowspan="2"> Telephone </th> </tr>'
addtorow
print(xtable(Cohort, caption = 'My Title'), caption.placement = 'top',
add.to.row = addtorow, include.colnames = FALSE, type='html')
?print.xtable
addtorow <- list()
addtorow$pos <- 1
addtorow$command <- '<tr> <th rowspan="2"> Telephone </th> </tr>'
print(xtable(Cohort, caption = 'My Title'), caption.placement = 'top',
add.to.row = addtorow, include.colnames = FALSE, type='html')
runApp()
runApp()
runApp()
runApp()
list(pos=list(0), command=c("<TR> <TD colspan=2> Numbers </TD> </TR>"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste("<TR>", lapply(names(team_stats), function(x) paste('<TH>', x, '</TH>')), '/TR')
paste("<TR>", paste(lapply(names(team_stats), function(x) paste('<TH>', x, '</TH>')), collapse=''), '/TR')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?print.xtable()
runApp()
runApp()
runApp()
?gsub
runApp()
runApp()
runApp()
data.table(wins=1, wins=1)
runApp()
runApp()
paste("<TR>", paste(lapply(names(team_stats), function(x) paste('<TH>', x, '</TH>')), collapse=''), '</TR>')
runApp()
team_stats
gsub('Home|Away', '', names(teams_stats))
gsub('Home|Away', '', names(team_stats))
runApp()
names(team_stats) <- gsub('Home|Away', '', names(team_stats))
team_stats
runApp()
runApp()
runApp()
runApp()
runApp()
rm(team_stats)
runApp()
footy_tab  <- values$data
teams <- unique(c(footy_tab[ , unique(HomeTeam)], footy_tab[ , unique(AwayTeam)]))
home_team_stats <- lapply(teams, function(x) {
footy_tab[HomeTeam==x, list(Team                 = x,
Played1              = .N,
Points1              = sum(ifelse(FTR == 'H', 1L, 0L)) * 3 + sum(ifelse(FTR == 'D', 1L, 0L)),
`Home Wins`          = sum(ifelse(FTR == 'H', 1L, 0L)),
`Home Draws`         = sum(ifelse(FTR == 'D', 1L, 0L)),
`Home Losses`        = sum(ifelse(FTR == 'A', 1L, 0L)),
`Home Scored`  = sum(FTHG),
`Home Conceded`= sum(FTAG)),
by='HomeTeam']
})
away_team_stats <- lapply(teams, function(x) {
footy_tab[AwayTeam==x, list(Team                 = x,
Played2              = .N,
Points2              = sum(ifelse(FTR == 'A', 1L, 0L)) * 3 + sum(ifelse(FTR == 'D', 1L, 0L)),
`Away Wins`          = sum(ifelse(FTR == 'A', 1L, 0L)),
`Away Draws`         = sum(ifelse(FTR == 'D', 1L, 0L)),
`Away Losses`        = sum(ifelse(FTR == 'H', 1L, 0L)),
`Away Scored`  = as.integer(sum(FTAG)),
`Away Conceded`= as.integer(sum(FTHG))),
by='AwayTeam']
})
home_team_stats <- rbindlist(home_team_stats)
away_team_stats <- rbindlist(away_team_stats)
team_stats <- cbind(home_team_stats, away_team_stats)[, list(Team,
Played = Played1 + Played2,
`Home Wins`, `Home Draws`, `Home Losses`, `Home Scored`, `Home Conceded`,
`Away Wins`, `Away Draws`, `Away Losses`, `Away Scored`, `Away Conceded`,
`Goal Diff` = `Home Scored` + `Away Scored` - `Home Conceded` - `Away Conceded`,
Points      = as.integer(Points1 + Points2))][,
total_scored := `Home Scored` + `Away Scored`]
setorder(team_stats, -Points, -`Goal Diff`, -total_scored)
team_stats[, Pos := as.character(.I)]
team_stats[, total_scored := NULL]
team_stats <- team_stats[, c('Pos', names(team_stats)[-length(names(team_stats))]), with = FALSE]
names(team_stats) <- gsub('Home|Away', '', names(team_stats))
team_stats
runApp()
?renderTable
rm(team_stats)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
teams <- unique(c(footy_tab[ , unique(HomeTeam)], footy_tab[ , unique(AwayTeam)]))
home_team_stats <- lapply(teams, function(x) {
footy_tab[HomeTeam==x, list(Team                 = x,
Played1              = .N,
Points1              = sum(ifelse(FTR == 'H', 1L, 0L)) * 3 + sum(ifelse(FTR == 'D', 1L, 0L)),
`Home Wins`          = sum(ifelse(FTR == 'H', 1L, 0L)),
`Home Draws`         = sum(ifelse(FTR == 'D', 1L, 0L)),
`Home Losses`        = sum(ifelse(FTR == 'A', 1L, 0L)),
`Home Scored`  = sum(FTHG),
`Home Conceded`= sum(FTAG)),
by='HomeTeam']
})
away_team_stats <- lapply(teams, function(x) {
footy_tab[AwayTeam==x, list(Team                 = x,
Played2              = .N,
Points2              = sum(ifelse(FTR == 'A', 1L, 0L)) * 3 + sum(ifelse(FTR == 'D', 1L, 0L)),
`Away Wins`          = sum(ifelse(FTR == 'A', 1L, 0L)),
`Away Draws`         = sum(ifelse(FTR == 'D', 1L, 0L)),
`Away Losses`        = sum(ifelse(FTR == 'H', 1L, 0L)),
`Away Scored`  = as.integer(sum(FTAG)),
`Away Conceded`= as.integer(sum(FTHG))),
by='AwayTeam']
})
home_team_stats <- rbindlist(home_team_stats)
away_team_stats <- rbindlist(away_team_stats)
team_stats <- cbind(home_team_stats, away_team_stats)[, list(Team,
Played = Played1 + Played2,
`Home Wins`, `Home Draws`, `Home Losses`, `Home Scored`, `Home Conceded`,
`Away Wins`, `Away Draws`, `Away Losses`, `Away Scored`, `Away Conceded`,
`Total Wins`    = `Home Wins`     + `Away Wins`,
`Total Draws`   = `Home Draws`    + `Away Draws`,
`Total Losses`  = `Home Losses`   + `Away Losses`,
`Total Scored`  = `Home Scored`   + `Away Scored`,
`Total Conceded`= `Home Conceded` + `Away Conceded`,
`Goal Diff` = `Home Scored` + `Away Scored` - `Home Conceded` - `Away Conceded`,
Points      = as.integer(Points1 + Points2))][,
total_scored := `Home Scored` + `Away Scored`]
setorder(team_stats, -Points, -`Goal Diff`, -total_scored)
team_stats[, Pos := as.character(.I)]
team_stats[, total_scored := NULL]
team_stats <- team_stats[, c('Pos', names(team_stats)[-length(names(team_stats))]), with = FALSE]
team_stats
runApp()
ls(package:highcharter)
hc_get_colors()[1]
runApp()
